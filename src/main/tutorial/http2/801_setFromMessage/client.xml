<?xml version="1.0" encoding="UTF-8"?>

<scenario>

	<parameter name="nameChannel" operation="number.uid" value="[nameChannel]"/>
	
	<semaphore name="SEM1" action="wait" />
	
	<openChannelHTTP2 name="[nameChannel]" remoteURL="http://[remoteHTTP]"/>    
	
    <sendMessageHTTP2 name="Send POST" channel="[nameChannel]">
<![CDATA[
POST http://[remoteHTTP] HTTP/2.0
Host: [remoteHTTP]
Accept-charset: text/html
Content-Type: text/html
Content-Encoding: utf-8;iso-8859
User-Agent: XMLLoader
Content-Length: 14

some content]]>
    </sendMessageHTTP2>
		
  	<receiveMessageHTTP2 name="Send 200 OK" request="false" result="200">
    		<parameter name="[Firstline]" operation="protocol.setFromMessage" value="firstline"/>  	  	
    		<parameter name="[Version]" operation="protocol.setFromMessage" value="firstline.version"/>  	
    		<parameter name="[Method]" operation="protocol.setFromMessage" value="firstline.method"/>  	  		
    		<parameter name="[Uri]" operation="protocol.setFromMessage" value="firstline.uri"/>  	  		  		  		
    		<parameter name="[StatusCode]" operation="protocol.setFromMessage" value="firstline.statuscode"/>  	
    		<parameter name="[ReasonPhrase]" operation="protocol.setFromMessage" value="firstline.reasonPhrase"/>  	  			
    		<parameter name="[ContentLength]" operation="protocol.setFromMessage" value="header.Content-Length"/>
    		<parameter name="[Content]" operation="protocol.setFromMessage" value="content"/>
  	</receiveMessageHTTP2>

    <!-- perform test -->
    <test parameter="[Firstline]" condition="string.equals" value="HTTP/2.0 200 OK"/>           
    <test parameter="[Version]" condition="string.equals" value="HTTP/2.0"/>                       
    <test parameter="[Uri]" condition="list.isEmpty"/>            
    <test parameter="[Method]" condition="list.isEmpty"/>            
    <test parameter="[StatusCode]" condition="string.equals" value="200"/>
    <test parameter="[ReasonPhrase]" condition="string.equals" value="OK"/>            
    <test parameter="[ContentLength]" condition="string.equals" value="14"/>
    <test parameter="[Content]" condition="string.contains" value="host message"/>

    <sendMessageHTTP2 name="Send POST" channel="[nameChannel]">
<![CDATA[
POST http://[remoteHTTP] HTTP/2.0
Host: [remoteHTTP]
Accept-charset: text/html
Content-Type: text/html
Content-Encoding: utf-8;iso-8859
User-Agent: XMLLoader

some content
]]>
    </sendMessageHTTP2>

  	<receiveMessageHTTP2 name="Send 200 OK" request="false" result="200">
    		<parameter name="[Firstline]" operation="protocol.setFromMessage" value="firstline"/>  	  	
    		<parameter name="[Version]" operation="protocol.setFromMessage" value="firstline.version"/>  	
    		<parameter name="[Method]" operation="protocol.setFromMessage" value="firstline.method"/>  	  		
    		<parameter name="[Uri]" operation="protocol.setFromMessage" value="firstline.uri"/>  	  		  		  		
    		<parameter name="[StatusCode]" operation="protocol.setFromMessage" value="firstline.statuscode"/>  	
    		<parameter name="[ReasonPhrase]" operation="protocol.setFromMessage" value="firstline.reasonPhrase"/>  	  			
    		<parameter name="[ContentLength]" operation="protocol.setFromMessage" value="header.Content-Length"/>
    		<parameter name="[Content]" operation="protocol.setFromMessage" value="content"/>
  	</receiveMessageHTTP2>

    <!-- perform test -->
    <test parameter="[Firstline]" condition="string.equals" value="HTTP/2.0 200 OK"/>           
    <test parameter="[Version]" condition="string.equals" value="HTTP/2.0"/>                       
    <test parameter="[Uri]" condition="list.isEmpty"/>            
    <test parameter="[Method]" condition="list.isEmpty"/>            
    <test parameter="[StatusCode]" condition="string.equals" value="200"/>
    <test parameter="[ReasonPhrase]" condition="string.equals" value="OK"/>            
    <test parameter="[ContentLength]" condition="string.equals" value="14"/>
    <test parameter="[Content]" condition="string.contains" value="host message"/>

	<finally>
			<closeChannelHTTP2 name="[nameChannel]"/>
	</finally>	
</scenario> 
