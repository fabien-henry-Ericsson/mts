<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->


<!--
    Document   : server.xml
    Created on : 10/07/2014
    Author     : fhenry
    Description: Receive a MAP message
-->

<scenario>

    <!-- Message encoded value -->
    <parameter name="[data]" value="0100010100000074020000080000006600060008000000650210005b000000020000000103020001090103070b044301000804430200083b64394904000009996b2a2828060700118605010101a01d611b80020780a109060704000001001502a203020100a305a1030201006c05a20302010100" />
    <parameter name="[length]" operation="string.length" value="[data]"/>
    
    <receiveMessageSIGTRAN name="Wait DATA1" request="false" result="RESULT">
      <parameter name="[channelName]" operation="protocol.setFromMessage" value="channel.name"/>
      <parameter name="[request]" operation="protocol.setFromMessage" value="message.request"/>
      <parameter name="[type]" operation="protocol.setFromMessage" value="message.type"/>
      <parameter name="[result]" operation="protocol.setFromMessage" value="message.result"/>
    	<parameter name="[data1]" operation="protocol.setFromMessage" value="message.binary"/>
    </receiveMessageSIGTRAN>  
        
    <parameter name="[end]" operation="protocol.setFromMessage" value="tcap.end"/>
    <test parameter="[end]" condition="list.size" value="0"/>
    <parameter name="[otid]" operation="protocol.setFromMessage" value="tcap.end.otid"/>    
    <test parameter="[otid]" condition="list.size" value="0"/>    
    <parameter name="[dtid]" operation="protocol.setFromMessage" value="tcap.end.dtid"/>    
    <test parameter="[dtid]" condition="list.size" value="1"/>
    <test parameter="[dtid]" condition="binary.equals" value="00000999"/>
    <parameter name="[dialoguePortion]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion"/>    
    <test parameter="[dialoguePortion]" condition="list.size" value="0"/>
    <parameter name="[ExternalPDU]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU"/>
    <test parameter="[ExternalPDU]" condition="list.size" value="0"/>
    <parameter name="[direct_reference]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType"/>    
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>    
    <parameter name="[direct_reference]" operation="protocol.setFromMessage" value="tcap.ExternalPDUSequenceType"/>    
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>
    <parameter name="[single_ASN1_type]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.single_ASN1_type"/>
    <test parameter="[single_ASN1_type]" condition="list.size" value="0"/>                                     
    <parameter name="[UniDialoguePDU]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.single_ASN1_type.UniDialoguePDU"/>    
    <test parameter="[UniDialoguePDU]" condition="list.size" value="0"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.single_ASN1_type.DialoguePDU.dialogueResponse.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.DialoguePDU.dialogueResponse.AARE_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>    
    <parameter name="[result]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result"/>
    <test parameter="[result]" condition="string.equals" value="020100"/>
    <parameter name="[associate_result]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result.Associate_result"/>
    <test parameter="[associate_result]" condition="list.size" value="1"/>    
    <test parameter="[associate_result]" condition="string.equals" value="0"/>
    <parameter name="[associate_result]" operation="protocol.setFromMessage" value="tcap.Associate_result"/>
    <test parameter="[associate_result]" condition="list.size" value="1"/>    
    <test parameter="[associate_result]" condition="string.equals" value="0"/>
    <parameter name="[result_source_diagnostic]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result_source_diagnostic"/>
    <test parameter="[result_source_diagnostic]" condition="string.equals" value="a103020100"/>        
    <parameter name="[associate_source_diagnostic]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result_source_diagnostic.Associate_source_diagnostic"/>
    <test parameter="[associate_source_diagnostic]" condition="list.size" value="0"/>    
    <parameter name="[dialogue_service_user]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result_source_diagnostic.Associate_source_diagnostic.dialogue_service_user"/>
    <test parameter="[dialogue_service_user]" condition="list.size" value="1"/>
    <test parameter="[dialogue_service_user]" condition="string.equals" value="020100"/>    
    <parameter name="[dialogue_service_user]" operation="protocol.setFromMessage" value="tcap.end.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueResponse.AARE_apduSequenceType.result_source_diagnostic.Associate_source_diagnostic.dialogue_service_user.Dialogue_service_user"/>
    <test parameter="[dialogue_service_user]" condition="list.size" value="1"/>    
    <test parameter="[dialogue_service_user]" condition="string.equals" value="0"/>
    <parameter name="[dialogue_service_user]" operation="protocol.setFromMessage" value="tcap.Dialogue_service_user"/>
    <test parameter="[dialogue_service_user]" condition="list.size" value="1"/>    
    <test parameter="[dialogue_service_user]" condition="string.equals" value="0"/>
        
    <!-- control AP part -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="asn.xml"/>
    <test parameter="[xml]" condition="string.contains" value="&lt;Integer&gt;1&lt;/Integer&gt;"/>
            
    <!-- control dialoguePortion -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="tcap.xml"/>
    <parameter name="[end]" operation="string.xpath" value="[xml]" value2="//end.A4.Sequence"/>
    <test parameter="[end]" condition="list.size" value="1"/>
    <parameter name="[otid]" operation="string.xpath" value="[end]" value2="//dtid.BoxedType/Bytes.A8/text()"/>
    <test parameter="[otid]" condition="list.size" value="0"/>        
    <parameter name="[dtid]" operation="string.xpath" value="[end]" value2="//dtid.BoxedType/Bytes.A9/text()"/>
    <test parameter="[dtid]" condition="list.size" value="1"/>
    <test parameter="[dtid]" condition="binary.equals" value="00000999"/>    
    <parameter name="[dialoguePortion]" operation="string.xpath" value="[end]" value2="//dialoguePortion.BoxedType"/>
    <test parameter="[dialoguePortion]" condition="list.size" value="1"/>
    <parameter name="[ExternalPDU]" operation="string.xpath" value="[dialoguePortion]" value2="//ExternalPDU.A11.BoxedType"/>
    <test parameter="[ExternalPDU]" condition="list.size" value="1"/>
    <parameter name="[direct_reference]" operation="string.xpath" value="[ExternalPDU]" value2="//direct_reference/ObjectIdentifier/text()"/>
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>
    <parameter name="[single_ASN1_type]" operation="string.xpath" value="[ExternalPDU]" value2="//single_ASN1_type.C0.BoxedType"/>
    <test parameter="[single_ASN1_type]" condition="list.size" value="1"/>
    <parameter name="[dialoguePDU]" operation="string.xpath" value="[single_ASN1_type]" value2="//DialoguePDU.C0.Choice"/>
    <test parameter="[dialoguePDU]" condition="list.size" value="1"/>
    <parameter name="[dialogueResponse]" operation="string.xpath" value="[dialoguePDU]" value2="//dialogueResponse.A1.BoxedType"/>
    <test parameter="[dialogueResponse]" condition="list.size" value="1"/>
    <parameter name="[protocol_version]" operation="string.xpath" value="[dialogueResponse]" value2="//protocol_version.C0d/BitString/@value"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[application_context_name]" operation="string.xpath" value="[dialogueResponse]" value2="//application_context_name.C1.BoxedType/ObjectIdentifier.C1/ObjectIdentifier/text()"/>
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[result]" operation="string.xpath" value="[dialogueResponse]" value2="//result.C2.BoxedType"/>
    <test parameter="[result]" condition="list.size" value="1"/>
    <parameter name="[associate_result]" operation="string.xpath" value="[result]" value2="//Associate_result.C2.BoxedType/Long/text()"/>
    <test parameter="[associate_result]" condition="list.size" value="1"/>    
    <test parameter="[associate_result]" condition="string.equals" value="0"/>
    <parameter name="[result_source_diagnostic]" operation="string.xpath" value="[dialogueResponse]" value2="//result_source_diagnostic.C3.BoxedType"/>
    <test parameter="[result_source_diagnostic]" condition="list.size" value="1"/>    
    <parameter name="[associate_source_diagnostic]" operation="string.xpath" value="[result_source_diagnostic]" value2="//Associate_source_diagnostic.C3.Choice"/>
    <test parameter="[associate_source_diagnostic]" condition="list.size" value="1"/>    
    <parameter name="[dialogue_service_user]" operation="string.xpath" value="[associate_source_diagnostic]" value2="//dialogue_service_user.C1.BoxedType"/>
    <test parameter="[dialogue_service_user]" condition="list.size" value="1"/>    
    <parameter name="[dialogue_service_user]" operation="string.xpath" value="[dialogue_service_user]" value2="//Dialogue_service_user.C1.BoxedType/Long/text()"/>
    <test parameter="[dialogue_service_user]" condition="list.size" value="1"/>    
    <test parameter="[dialogue_service_user]" condition="string.equals" value="0"/>
    
    <!-- control components -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="tcap.xml"/>
    <parameter name="[component]" operation="string.xpath" value="[xml]" value2="//Component.A12.Choice"/>
    <test parameter="[component]" condition="list.size" value="1"/>
    <parameter name="[returnResultLast]" operation="string.xpath" value="[component]" value2="//returnResultLast.C2.Sequence"/>
    <test parameter="[returnResultLast]" condition="list.size" value="1"/>
    <parameter name="[invokeID]" operation="string.xpath" value="[returnResultLast]" value2="//invokeID.BoxedType/Integer/text()"/>
    <test parameter="[invokeID]" condition="list.size" value="1"/>
    <test parameter="[invokeID]" condition="string.equals" value="1"/>

    <!-- Message encoded value -->
    <if>
    	<condition>
    		<test parameter="[data1]" condition="binary.equals" value="[data]"/>
    	</condition>
    	<else>
    		<log level="ERROR">	Message received :	</log>
    		<log level="ERROR">	"[data1]"			</log>
    		<log level="ERROR">	Message expected :	</log>
    		<log level="ERROR">	"[data]"			</log>
    	</else>
    </if>

    <parameter name="[result]" operation="binary.difference" value="[data1]" value2="[data]"/>
    <test parameter="[data1]" condition="binary.equals" value="[data]"/>      
	
</scenario>
