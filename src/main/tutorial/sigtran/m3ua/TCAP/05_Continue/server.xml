<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->


<!--
    Document   : server.xml
    Created on : 10/07/2014
    Author     : fhenry
    Description: Receive a MAP message
-->

<scenario>

    <!-- Message encoded value -->
    <parameter name="[data]" value="010001010000009c0200000800000066000600080000006502100082000000010000000203020001090103070b044302000804430100086265604804000000014904000009996b1e281c060700118605010101a011600f80020780a1090607040000010015026c32a13002010002012e30288407913366600567f98207913366317071f3041411080b913366600567f70000a906f3f97c3e9f030000" />
    <parameter name="[length]" operation="string.length" value="[data]"/>
    
    <receiveMessageSIGTRAN name="Wait DATA1" request="true" type="46">
      <parameter name="[channelName]" operation="protocol.setFromMessage" value="channel.name"/>
      <parameter name="[request]" operation="protocol.setFromMessage" value="message.request"/>
      <parameter name="[type]" operation="protocol.setFromMessage" value="message.type"/>
      <parameter name="[result]" operation="protocol.setFromMessage" value="message.result"/>
    	<parameter name="[data1]" operation="protocol.setFromMessage" value="message.binary"/>
    </receiveMessageSIGTRAN>      

    <parameter name="[continue1]" operation="protocol.setFromMessage" value="tcap.continue1"/>
    <test parameter="[continue1]" condition="list.size" value="0"/>
    <parameter name="[otid]" operation="protocol.setFromMessage" value="tcap.continue1.otid"/>    
    <test parameter="[otid]" condition="list.size" value="1"/>
    <test parameter="[otid]" condition="binary.equals" value="00000001"/>    
    <parameter name="[dtid]" operation="protocol.setFromMessage" value="tcap.continue1.dtid"/>    
    <test parameter="[dtid]" condition="list.size" value="1"/>
    <test parameter="[dtid]" condition="binary.equals" value="00000999"/>
    <parameter name="[dialoguePortion]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion"/>    
    <test parameter="[dialoguePortion]" condition="list.size" value="0"/>
    <parameter name="[ExternalPDU]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU"/>
    <test parameter="[ExternalPDU]" condition="list.size" value="0"/>
    <parameter name="[direct_reference]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType"/>    
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>    
    <parameter name="[direct_reference]" operation="protocol.setFromMessage" value="tcap.ExternalPDUSequenceType"/>    
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>
    <parameter name="[single_ASN1_type]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU.single_ASN1_type"/>
    <test parameter="[single_ASN1_type]" condition="list.size" value="0"/>                                     
    <parameter name="[UniDialoguePDU]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU.single_ASN1_type.UniDialoguePDU"/>    
    <test parameter="[UniDialoguePDU]" condition="list.size" value="0"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.single_ASN1_type.DialoguePDU.dialogueRequest.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[protocol_version]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueRequest.protocol_version"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.DialoguePDU.dialogueRequest.AARQ_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.encoding.single_ASN1_type.DialoguePDU.dialogueRequest.AARQ_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueRequest.AARQ_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    <parameter name="[application_context_name]" operation="protocol.setFromMessage" value="tcap.continue1.dialoguePortion.DialogueOC.ExternalPDU.ExternalPDUSequenceType.encoding.single_ASN1_type.DialoguePDU.dialogueRequest.AARQ_apduSequenceType.application_context_name"/>    
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>

    <!-- control log AP part -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="asn.xml"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;33660650769&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;33661307173&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;SMS-SUBMIT / SMS-SUBMIT-REPORT:1&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;8&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;33660650767&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;implicit device type is specific to this SC,:0&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;Class 0:0&quot;"/>    
    <test parameter="[xml]" condition="string.contains" value="value=&quot;SMS-SUBMIT / SMS-SUBMIT-REPORT:1&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;3 d(ays):169&quot;"/>
    <test parameter="[xml]" condition="string.contains" value="value=&quot;f3f97c3e9f03&quot;"/>
            
    <!-- control log dialoguePortion -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="tcap.xml"/>
    <parameter name="[continue1]" operation="string.xpath" value="[xml]" value2="//continue1.A5.Sequence"/>
    <test parameter="[continue1]" condition="list.size" value="1"/>
    <parameter name="[otid]" operation="string.xpath" value="[continue1]" value2="//otid.BoxedType/Bytes.A8/text()"/>
    <test parameter="[otid]" condition="list.size" value="1"/>
    <test parameter="[otid]" condition="binary.equals" value="00000001"/>
    <parameter name="[dtid]" operation="string.xpath" value="[continue1]" value2="//dtid.BoxedType/Bytes.A9/text()"/>
    <test parameter="[dtid]" condition="list.size" value="1"/>
    <test parameter="[dtid]" condition="binary.equals" value="00000999"/>            
    <parameter name="[dialoguePortion]" operation="string.xpath" value="[continue1]" value2="//dialoguePortion.BoxedType"/>
    <test parameter="[dialoguePortion]" condition="list.size" value="1"/>
    <parameter name="[externalPDU]" operation="string.xpath" value="[dialoguePortion]" value2="//ExternalPDU.A11.BoxedType"/>
    <test parameter="[externalPDU]" condition="list.size" value="1"/>
    <parameter name="[direct_reference]" operation="string.xpath" value="[externalPDU]" value2="//direct_reference/ObjectIdentifier/text()"/>
    <test parameter="[direct_reference]" condition="list.size" value="1"/>
    <test parameter="[direct_reference]" condition="string.equals" value="dialogue-as-id:0.0.17.773.1.1.1"/>
    <parameter name="[single_ASN1_type]" operation="string.xpath" value="[externalPDU]" value2="//single_ASN1_type.C0.BoxedType"/>
    <test parameter="[single_ASN1_type]" condition="list.size" value="1"/>
    <parameter name="[dialoguePDU]" operation="string.xpath" value="[single_ASN1_type]" value2="//DialoguePDU.C0.Choice"/>
    <test parameter="[dialoguePDU]" condition="list.size" value="1"/>
    <parameter name="[dialogueRequest]" operation="string.xpath" value="[dialoguePDU]" value2="//dialogueRequest.A0.BoxedType"/>
    <test parameter="[dialogueRequest]" condition="list.size" value="1"/>
    <parameter name="[protocol_version]" operation="string.xpath" value="[dialogueRequest]" value2="//protocol_version.C0d/BitString/@value"/>
    <test parameter="[protocol_version]" condition="list.size" value="1"/>
    <test parameter="[protocol_version]" condition="string.equals" value="Version1:80"/>
    <parameter name="[application_context_name]" operation="string.xpath" value="[dialogueRequest]" value2="//application_context_name.C1.BoxedType/ObjectIdentifier.C1/ObjectIdentifier/text()"/>
    <test parameter="[application_context_name]" condition="list.size" value="1"/>
    <test parameter="[application_context_name]" condition="string.equals" value="shortMsgRelayContext-v2:0.4.0.0.1.0.21.2"/>
    
    <!-- control log components -->
    <parameter name="[xml]" operation="protocol.setFromMessage" value="tcap.xml"/>
    <parameter name="[component]" operation="string.xpath" value="[xml]" value2="//Component.A12.Choice"/>
    <test parameter="[component]" condition="list.size" value="1"/>
    <parameter name="[invoke]" operation="string.xpath" value="[component]" value2="//invoke.C1.Sequence"/>
    <test parameter="[invoke]" condition="list.size" value="1"/>
    <parameter name="[invokeID]" operation="string.xpath" value="[invoke]" value2="//invokeID.BoxedType/Integer/text()"/>
    <test parameter="[invokeID]" condition="list.size" value="1"/>
    <test parameter="[invokeID]" condition="string.equals" value="0"/>
    <parameter name="[opCode]" operation="string.xpath" value="[invoke]" value2="//opCode.Choice"/>
    <test parameter="[opCode]" condition="list.size" value="1"/>
    <parameter name="[opCodeLocalValue]" operation="string.xpath" value="[opCode]" value2="//localValue/text()"/>
    <test parameter="[opCodeLocalValue]" condition="list.size" value="1"/>
    <test parameter="[opCodeLocalValue]" condition="string.equals" value="mo-forwardSM:46"/>
    <parameter name="[invokeparameter]" operation="string.xpath" value="[invoke]" value2="//parameter/text()"/>
    <test parameter="[invokeparameter]" condition="list.size" value="1"/>
    <test parameter="[invokeparameter]" condition="binary.equals" value="30288407913366600567f98207913366317071f3041411080b913366600567f70000a906f3f97c3e9f03"/>

    <!-- Message encoded value -->    
    <if>
    	<condition>
    		<test parameter="[data1]" condition="binary.equals" value="[data]"/>
    	</condition>
    	<else>
    		<log level="ERROR">	Message received :	</log>
    		<log level="ERROR">	"[data1]"			</log>
    		<log level="ERROR">	Message expected :	</log>
    		<log level="ERROR">	"[data]"			</log>
    	</else>
    </if>

    <parameter name="[result]" operation="binary.difference" value="[data1]" value2="[data]"/>
    <test parameter="[data1]" condition="binary.equals" value="[data]"/>
    	
</scenario>
